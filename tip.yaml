ls:
  - 
    cmd: s -al
    desc: 查看当前文件夹下所有的文件详情（包含隐藏文件）
  - 
    cmd: alias ll='ls -al'
    desc: 快捷方式
df:
  - 
    cmd: df -h
    desc: 查看磁盘总量，使用量，剩余量信息
du:
  -
    cmd: du -h {file}
    desc: 统计文件夹下文件列表或者文件大小
  -
    cmd: du -sh {dir}
    desc: 统计文件大小总和
free:
  -
    cmd: free -h
    desc: 查看内存总量，使用量，剩余量等信息
telnet:
  -
    cmd: telnet {host} {port}
    desc: 检查TCP服务端口是否开启
netstat:
  - 
    cmd: netstat -ntpl
    desc: 列出当前系统启用的端口，以及端口对应的服务；
tar:
  -
    cmd: tar zcf {dir}.tar.gz {dir}
    desc: 文件夹打包成tar.gz格式
  -
    cmd: tar zxf {dir}.tar.gz
    desc: 解压到当前文件夹
top:
  -
    cmd: top
    desc: 查看系统各项动态信息（负载，登录时长，登录用户数，CPU，内存总览，进程占用等情况）
  -
    cmd: top -c
    desc: 显示完整的进程启动命令
  -
    cmd: top -d {second}
    desc: 指定刷新间隔
  -
    cmd: top -n {num}
    desc: 指定刷新次数，次数到了之后，top结束
  -
    cmd: top -p {pid}
    desc: 指定进程号，仅仅查看某个进程消耗
docker:
  -
    cmd: docker exec -it {container_id} bash
    desc: 进到容器内部
  -
    cmd: docker cp {container_id}:{path} {path}
    desc: 拷贝容器内文件到本机
  -
    cmd: docker cp {path} {container_id}:{path}
    desc: 拷贝本机文件到容器内部
  -
    cmd: docker logs -f -t {container_id}
    desc: 连续打印最新日志
  -
    cmd: docker logs --since 30m {container_id}
    desc: 查看最近30m日志
  -
    cmd: docker logs --since="2023-01-01T00:00:00" {container_id}
    desc: 查看指定时间之后的日志
  -
    cmd: docker logs --since="2023-01-01T00:00:00" --until="2023-01-02T00:00:00" {container_id}
    desc: 查看指定某段时间内的日志
  -
    cmd: docker logs {container_id} | grep {context}
    desc: 从所有日志中查询指定文本内容
lsof:
  - 
    cmd: lsof -p {pid}
    desc: 查看进程内打开的文件
  -
    cmd: lsof -i
    desc: 查看进程监听的端口以及进程内建立的连接
  -
    cmd: lsof -i:{port}
    desc: 查看监听端口的进程
  -
    cmd: lsof -i @{host}
    desc: 查看有哪些进程与host连接
curl:
  -
    cmd: curl ifconfig.net
    desc: 查看出口ip
  -
    cmd: curl -i {url}
    desc: curl get请求
  -
    cmd: curl -v -H 'Content-Type:applicaiton/json' -X POST -d '{json}' {url}
    desc: curl post json请求
  -
    cmd: curl -s {url} | bash
    desc: curl下载脚本并执行
ulimit:
  -
    cmd: ulimit -a
    desc: 查看系统文件数设置情况；open files 代表进程能打开的文件数量上限
  -
    cmd: vim /etc/security/limits.conf
    desc: 修改系统文件数设置
find:
  -
    cmd: find {path} -name {filename}
    desc: 指定文件夹根据名称递归查找文件
  -
    cmd: find {path} | xargs grep -ri {content}
    desc: 指定文件夹查找文件名称或者文件内容符合条件的
ssh:
  -
    cmd: ssh {user}@{host} -p {port}
    desc: ssh登录远程服务器
ntpdate:
  -
    cmd: ntpdate 3.asia.pool.ntp.org
    desc: 连接ntp服务器更新本地时间
chmod:
  -
    cmd: chmod a+{x|r|w} {file}
    desc: 给文件添加读写执行权限
  -
    cmd: chmod 755 {file}
    desc: 给文件添加读写执行权限
mysql:
  -
    cmd: mysql --host={host} --port={port} --user={user} -p
    desc: mysql客户端登录
mysqldump:
  -
    cmd: mysqldump –single-transaction  -u{user} -p{password} --no-data --databases {db1} {db2} > {file}_`date '+%Y%m%d'`.sql
    desc: 备份表结构到文件
  -
    cmd: mysqldump –single-transaction  -u{user} -p{password} --databases {db1} {db2} > {file}_`date '+%Y%m%d'`.sql
    desc: 备份db到文件
  -
    cmd: mysqldump –single-transaction  -u{user} -p{password} --all-databases > {file}_`date '+%Y%m%d'`.sql
    desc: 备份所有db到文件
  -
    cmd: mysqldump –single-transaction  -u{user} -p{password} --ignore-table={db1.table1} --ignore-table={db2.table2} --databases {db1} {db2}  > {file}_`date '+%Y%m%d'`.sql
    desc: 备份db到文件，不备份指定表（比如日志表）
redis:
  -
    cmd: redis-cli -h {host} -p {port}
    desc: redis客户端登录
log:
  -
    cmd: cat -n {logfile} | grep {content | traceid}
    desc: 查询日志符合条件的日志打印
  -
    cmd: cat -n {logfile} | tail -n +{lineid} | more
    desc: 根据查询到的行号，从行号开始分页进行内容查看
ln:
  -
    cmd: ln -s {src} {dest_link}
    desc: 创建软链接
ps:
  -
    cmd: ps aux
    desc: 查看进程列表
kill:
  -
    cmd: kill {pid} | kill -15 {pid}
    desc: 优雅退出
  -
    cmd: kill -9 {pid}
    desc: 强杀进程
time:
  -
    cmd: time {command}
    desc: 统计命令执行时长，连同使用的用户态时长和内核态时长都会反馈出来
git:
  -
    cmd: git tag {v1.0.0} && git push origin {v1.0.0}
    desc: 当前分支打tag，同时推送到远程仓库
wrk:
  -
    cmd: brew install wrk
    desc: mac安装压测工具wrk
  -
    cmd: git clone https://github.com/wg/wrk.git && cd wrk && make
    desc: linux安装压测工具wrk
  -
    cmd: wrk -c100 -t2 -d30s --latency http://127.0.0.1:8080/api
    desc: get请求，消费队列长度100， 2个线程，持续30s压测
  -
    cmd: wrk -c100 -t2 -d30s --latency http://127.0.0.1:8080/api  --script=post.lua
    desc: post请求，消费队列长度100， 2个线程，持续30s压测（post.lua示例：http://tip.ruanfor.com/post.lua 或者参看 https://www.cnblogs.com/felixzh/p/8400729.html)
conda:
  -
    cmd: conda create -n {envname} python={version}
    desc: 创建虚拟环境，同时指定python版本
  -
    cmd: conda activate {envname}
    desc: 设置环境
  -
    cmd: conda deactivate {envname}
    desc: 退出环境
nslookup:
  -
    cmd: nslookup {domain}
    desc: 域名解析
dig:
  -
    cmd: dig @{dns_ip} {domain}
    desc: 指定dns解析器，域名解析